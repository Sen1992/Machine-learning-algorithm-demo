动态规划主要用于解决最优化问题，适用于子问题重叠所构成的问题，子问题出现在给定问题的递推关系中，通过将子问题的解存储在记录表中，以空间换时间
误区：不要去求解单位体积的价值来排序
方向：
1.最优子结构,母问题可以通过最优子结构来求得
2.子问题重叠，子问题与母问题是同样的性质，不同之处在于传递的参数
3. 边界，是否能到达能求解的最小子问题，是不断最小化最优子结构终止的条件
4. 子问题独立
5. 每一个子问题的解将会被记录，下次使用将不会重新计算，动态规划的核心优势
6.时间复杂度的计算，子问题数目最多，人数乘以矿数可以得到问题的数目，然后再乘以每个问题面对的选择数，就是最后的时间复杂度
根据上述四点，写出转移状态方程


 当mineNum = 0且people >= peopleNeeded[mineNum]时 f(people,mineNum) = gold[mineNum]

       当mineNum = 0且people < peopleNeeded[mineNum]时 f(people,mineNum) = 0

       当mineNum != 0时 f(people,mineNum) = f(people-peopleNeeded[mineNum], mineNum-1) + gold[mineNum]与f(people, mineNum-1)中的较大者，前两个式子对应动态规划的“边界”，后一个式子对应动态规划的“最优子结构”
那么遇到问题如何用动态规划去解决呢？根据上面的分析我们可以按照下面的步骤去考虑：

       1、构造问题所对应的过程。
       2、思考过程的最后一个步骤，看看有哪些选择情况。
       3、找到最后一步的子问题，确保符合“子问题重叠”，把子问题中不相同的地方设置为参数。
       4、使得子问题符合“最优子结构”。
       5、找到边界，考虑边界的各种处理方式。
       6、确保满足“子问题独立”，一般而言，如果我们是在多个子问题中选择一个作为实施方案，而不会同时实施多个方案，那么子问题就是独立的。
       7、考虑如何做备忘录。
       8、分析所需时间是否满足要求。
       9、写出转移方程式。

问题:

  有一个国家，所有的国民都非常老实憨厚，某天他们在自己的国家发现了十座金矿，并且这十座金矿在地图上排成一条直线，国王知道这个消息后非常高兴，他希望能够把这些金子都挖出来造福国民，首先他把这些金矿按照在地图上的位置从西至东进行编号，依次为0、1、2、3、4、5、6、7、8、9，然后他命令他的手下去对每一座金矿进行勘测，以便知道挖取每一座金矿需要多少人力以及每座金矿能够挖出多少金子，然后动员国民都来挖金子。

 

       题目补充1：挖每一座金矿需要的人数是固定的，多一个人少一个人都不行。国王知道每个金矿各需要多少人手，金矿i需要的人数为peopleNeeded[i]。

       题目补充2：每一座金矿所挖出来的金子数是固定的，当第i座金矿有peopleNeeded[i]人去挖的话，就一定能恰好挖出gold[i]个金子。否则一个金子都挖不出来。

       题目补充3：开采一座金矿的人完成开采工作后，他们不会再次去开采其它金矿，因此一个人最多只能使用一次。

       题目补充4：国王在全国范围内仅招募到了10000名愿意为了国家去挖金子的人，因此这些人可能不够把所有的金子都挖出来，但是国王希望挖到的金子越多越好。

       题目补充5：这个国家的每一个人都很老实（包括国王），不会私吞任何金子，也不会弄虚作假，不会说谎话。

       题目补充6：有很多人拿到这个题后的第一反应就是对每一个金矿求出平均每个人能挖出多少金子，然后从高到低进行选择，这里要强调这种方法是错的，如果你也是这样想的，请考虑背包模型，当有一个背包的容量为10，共有3个物品，体积分别是3、3、5，价值分别是6、6、9，那么你的方法取到的是前两个物品，总价值是12，但明显最大值是后两个物品组成的15。

       题目补充7：我们只需要知道最多可以挖出多少金子即可，而不用关心哪些金矿挖哪些金矿不挖。
